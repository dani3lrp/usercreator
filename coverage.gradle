def jacocoExcludes = [
        'cl/petrasic/usercreator/domain/**', 'cl/petrasic/usercreator/dto/**', 'cl/petrasic/usercreator/security/**'
]

def jacocoIncludes = [
        'cl/petrasic/usercreator/controller/**', 'cl/petrasic/usercreator/repository/**', 'cl/petrasic/usercreator/service/**'
]

jacocoTestReport {
    getExecutionData().from(fileTree(dir: "${buildDir}/jacoco", include: '**/*.exec'))
    reports {
        xml.enabled true
        html.destination file("${buildDir}/jacocoHtml")
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            //fileTree(dir: it, exclude: jacocoExcludes)
            fileTree(dir: it, include: jacocoIncludes)
        }))
    }
}

jacocoTestCoverageVerification {
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            //fileTree(dir: it, exclude: jacocoExcludes)
            fileTree(dir: it, include: jacocoIncludes)
        }))
    }
    violationRules {
        rule {
            enabled = true
            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.85
            }
        }
        rule {
            enabled = true
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.8
            }
        }

    }
}
jacocoTestReport {
    dependsOn test
}